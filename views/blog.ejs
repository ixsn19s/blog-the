<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('./partials/styles') %>
    <title>BLOG</title>
    <style>
      body {
        overflow-x: hidden;
      }

      img {
        max-width: 100%;
        height: auto;
      }

      .overflow-auto {
        overflow-x: auto;
        overflow-y: auto;
        max-height: 400px;
        word-wrap: break-word;
      }

      .container {
        padding: 4px;
        margin: 0 auto;
      }

      h2 {
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        /* margin-top: 20px; */
      }
      h3 {
        font-size: 1.4rem;
        font-weight: semibold;
        /* text-align: center; */
        /* margin-top: 20px; */
      }

      .pre-container {
        max-width: 1300px;
        margin: 10px auto;
        padding: 10px;
        /* background-color: #f8f8f8; */
        border-radius: 8px;
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);
      }

      .container {
        max-width: 1300px;
      }
      .profile {
        display: flex;
        align-items: center;
        gap: 12px;
      }

      .profile-pic {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #ccc;
      }

      .profile-name {
        font-size: 25px;
        font-weight: 500;
        color: #333;
      }

      pre {
        white-space: pre-wrap;
        word-break: break-word;
      }
    </style>
  </head>
  <body>
    <%- include('./partials/nav') %>

    <div class="container">
  <div class="flex flex-col justify-center items-center">
    <h2 class="mb-6 text-center">
      <%= blog.title %>
    </h2>

    <!-- Time, Edit & Delete Buttons in the same row -->
    <div class="flex items-center justify-center space-x-4 text-sm text-gray-500">
      <span id="blog-time"></span>

      <a href="/blog/edit/<%= blog._id %>"
         class="bg-green-500 text-white px-3 py-1 rounded-md hover:bg-green-600">
        Edit
      </a>

      <form action="/blog/delete/<%= blog._id %>"
            method="post"
            onsubmit="return confirm('Are you sure you want to delete this post?');">
        <button type="submit"
                class="bg-red-400 hover:bg-red-600 text-white cursor-pointer  px-3 py-1 rounded-md ">
          Delete
        </button>
      </form>
    </div>

    <!-- Blog Image -->
    <div class="mt-4">
      <img src="/uploads/<%= blog.coverImage %>" alt="Blog Image" class="w-full max-w-[800px] rounded-lg shadow-md">
    </div>
  </div>
</div>

      <div class="pre-container">
        <pre class="px-5 overflow-x-auto"><%= blog.body %></pre>
      </div>
    </div>

    <div class="container profile">
      <% if (blog.createdBy) { %>
      <img
        class="profile-pic"
        src="<%= blog.createdBy.profilePic %>"
        alt="Author's Profile Picture"
      />
      <h2 class="profile-name"><%= blog.createdBy.name %></h2>
      <% } else { %>
      <h2 class="profile-name">Unknown Author</h2>
      <% } %>
    </div>

    <div class="mt-2 container ml-6 mr-6">
      <h1>Comments ( <%= comments.length %>)</h1>
      <% if (!locals.user) { %>
      <form action="/blog/comment/<%= blog._id %>" method="post">
        <div class="mb-5">
          <input
            type="text"
            id="comment"
            name="content"
            placeholder="Enter comments"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
            required
          />
        </div>
        <button
          type="submit"
          class="text-white bg-blue-700 hover:bg-blue-800 font-medium cursor-pointer rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
        >
          Add commment
        </button>
      </form>
      <% } %>


 <div class="container">
  <% comments.forEach(comment => { %>
  <div class="mb-3 border-b pb-2 flex justify-between items-center">
    <div class="flex gap-2 items-center">
      <img
        class="w-10 h-10 rounded-full object-cover"
        src="<%= comment.createdBy.profilePic %>"
        alt="Profile Pic"
      />
      <div>
        <h3 class="font-semibold text-gray-800">
          <%= comment.createdBy.name %>
        </h3>
        <p class="text-sm text-gray-500" id="time-<%= comment._id %>"></p>
        <p class="mt-1 text-gray-700 text-base"><%= comment.content %></p>
      </div>
    </div>

    <!-- Show edit & delete only if the logged-in user is the comment owner -->
    <% if (locals.user && locals.user._id.toString() === comment.createdBy._id.toString()) { %>
    <div class="flex gap-2">
      <!-- Edit Button -->
      <button 
        class="text-blue-500 hover:underline cursor-pointer"
        onclick="editComment('<%= comment._id %>', '<%= comment.content %>')">
        Edit
      </button>

      <!-- Delete Button -->
      <form action="/comment/delete/<%= comment._id %>" method="post" onsubmit="return confirm('Are you sure you want to delete this comment?');">
        <button type="submit" class="text-red-500 hover:underline">
          Delete
        </button>
      </form>
    </div>
    <% } %>
  </div>




        <script>
          document.addEventListener("DOMContentLoaded", function () {
            const timeElement = document.getElementById(
              "time-<%= comment._id %>"
            );
            timeElement.textContent = timeAgo("<%= comment.createdAt %>");

            const blogTimeElement = document.getElementById("blog-time");
            blogTimeElement.textContent = timeAgo("<%= blog.createdAt %>");
          });



    function editComment(commentId, content) {
      const commentElement = document.querySelector(`#comment-text-${commentId}`);
      const editBox = document.createElement("textarea");
      editBox.value = content;
      editBox.classList.add("w-full", "border", "p-2", "rounded-md");

      const saveButton = document.createElement("button");
      saveButton.textContent = "Save";
      saveButton.classList.add("bg-green-500", "text-white", "px-3", "py-1", "rounded-md", "hover:bg-green-600");
      saveButton.onclick = function () {
        fetch(`/comment/edit/${commentId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ content: editBox.value }),
        }).then(() => window.location.reload());
      };

      commentElement.innerHTML = "";
      commentElement.appendChild(editBox);
      commentElement.appendChild(saveButton);
    }
        </script>
        <% }) %>
      </div>
    </div>

    <script>


// function editComment(commentId) {
//   // Hide comment text and show textarea
//   document.getElementById(`comment-text-${commentId}`).classList.add("hidden");
//   document.getElementById(`edit-comment-${commentId}`).classList.remove("hidden");
  
//   // Show save button
//   document.getElementById(`save-comment-btn-${commentId}`).classList.remove("hidden");
// }

// function saveComment(commentId) {
//   const updatedComment = document.getElementById(`edit-comment-${commentId}`).value;

//   fetch(`/blog/comment/edit/${commentId}`, {
//     method: "PUT",
//     headers: { "Content-Type": "application/json" },
//     body: JSON.stringify({ content: updatedComment }),
//   })
//   .then(response => response.json())
//   .then(data => {
//     if (data.success) {
//       document.getElementById(`comment-text-${commentId}`).textContent = updatedComment;
//       document.getElementById(`comment-text-${commentId}`).classList.remove("hidden");
//       document.getElementById(`edit-comment-${commentId}`).classList.add("hidden");
//       document.getElementById(`save-comment-btn-${commentId}`).classList.add("hidden");
//     } else {
//       alert("Error updating comment");
//     }
//   });
// }

// function deleteComment(commentId) {
//   if (!confirm("Are you sure you want to delete this comment?")) return;

//   fetch(`/blog/comment/delete/${commentId}`, { method: "DELETE" })
//   .then(response => response.json())
//   .then(data => {
//     if (data.success) {
//       document.getElementById(`comment-container-${commentId}`).remove();
//     } else {
//       alert("Error deleting comment");
//     }
//   });
// }


      function timeAgo(date) {
        const now = new Date();
        const past = new Date(date);
        const seconds = Math.floor((now - past) / 1000);

        const intervals = {
          year: 31536000,
          month: 2592000,
          week: 604800,
          day: 86400,
          hour: 3600,
          minute: 60,
          second: 1,
        };

        for (const [unit, value] of Object.entries(intervals)) {
          const time = Math.floor(seconds / value);
          if (time > 0) {
            return `${time} ${unit}${time > 1 ? "s" : ""} ago`;
          }
        }
        return "Just now";
      }
    </script>

    <%- include('./partials/scripts') %>
  </body>
</html>
